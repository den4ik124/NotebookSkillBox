@using Notebook.Application.Core
@using Notebook.Application.DTOs
@model PagedList<NoteDto>

@{
    ViewData["Title"] = "Notes list";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="text-center">
    <h1 class="display-4">Welcome</h1>
</div>

<h1>Notes list</h1>

<p>
    <a asp-action="CreateNoteView">Create New</a>
</p>
<table class="table table-hover">
    <thead>
        <tr>
            <th>
                ID
            </th>
            <th>
                Name
            </th>
            <th>
                Last name
            </th>
            <th>
                Third name
            </th>
            <th>
                Phone number
            </th>
            <th>
                Description
            </th>
            <th>
                Address
            </th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model.Items) {
        <tr onclick="location.href = '@(Url.Action("NoteData", "Notes", new { id = item.Id}))'">
            <td>
                    @Html.DisplayFor(modelItem => item.Id)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.FirstName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.LastName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ThirdName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.PhoneNumber)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Description)
            </td>
            <td>
                @if (item.Address != null)
                {
                    <p>
                        @Html.DisplayFor(modelItem => item.Address.Country),
                    </p>
                    <p>
                        @Html.DisplayFor(modelItem => item.Address.City),
                    </p>
                    <p>
                        @Html.DisplayFor(modelItem => item.Address.Street)
                    </p>
                }
            </td>
             <td>
                 @Html.ActionLink("Edit", "EditNote", null, new { noteId = item.Id})
                 @Html.ActionLink("Delete", "DeleteNote", null, new { id = item.Id})
              
            </td>
        </tr>
}
    </tbody>
</table>

<div>
    <ul class="pagination">
        @if(Model.PageInfo.Page > 1 )
        {
            <a asp-page="/Views/Notes/NotesList"
                asp-route-currentpage="@(Model.PageInfo.Page - 1)"
                class="btn btn-primary">	
                    &#171;
            </a>
        }
        @for (var i = 1; i <= Model.PageInfo.TotalPagesCount; i++)
        {
            <li class="page-item ">
                <a asp-page="/Views/Notes/NotesList" asp-route-currentpage="@i" class="page-link">@i</a>
            </li>
        }
        @if(Model.PageInfo.Page < Model.PageInfo.TotalPagesCount)
        {
             <a  asp-page="/Views/Notes/NotesList"
                asp-route-currentpage="@(Model.PageInfo.Page + 1)"
                class="btn btn-primary">
                &#187;
            </a>
        }
    </ul>
</div>
